
networks:
  application:
    driver: bridge

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: myBackendX
    ports:
      - 8000:8000
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - application
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    command: >
      sh -c "
        php artisan --verbose migrate &&
        php artisan serve --host=0.0.0.0 --port=8000
      "

  db:
    image: postgres:17
    ports:
      - 5432:5432
    volumes:
      - ./data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - application
    container_name: myPostgresX
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5